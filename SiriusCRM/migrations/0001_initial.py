# Generated by Django 2.1.7 on 2019-04-05 08:18

import SiriusCRM.managers.UserManager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('cities_light', '0008_city_timezone'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('village', models.CharField(blank=True, max_length=80, null=True)),
                ('street', models.CharField(blank=True, max_length=80, null=True)),
                ('house', models.CharField(blank=True, max_length=30, null=True)),
                ('apartment', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='address_city', to='cities_light.City')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=20, verbose_name='Mobile')),
                ('first_name', models.CharField(max_length=80, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=80, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, max_length=80, verbose_name='Middle name')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContactComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContactSocial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contact_social', to='SiriusCRM.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CourseCurator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_primary', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CrmComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('short_name', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Essay',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('essay', models.TextField()),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='SiriusCRM.Faculty')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=20, verbose_name='Mobile')),
                ('first_name', models.CharField(max_length=80, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=80, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, max_length=80, verbose_name='Middle name')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LeadComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_value', to='SiriusCRM.CrmComment')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lead_value', to='SiriusCRM.Lead')),
            ],
        ),
        migrations.CreateModel(
            name='LeadStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Messenger',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Offline',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('date_begin', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offline_address', to='SiriusCRM.Address')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organization_address', to='SiriusCRM.Address')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationIncome',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('note', models.CharField(blank=True, max_length=160, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_income', to='SiriusCRM.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationOutcome',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('note', models.CharField(blank=True, max_length=160, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_outcome', to='SiriusCRM.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=160)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SocialName',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('address', models.CharField(max_length=160)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='SiriusCRM.Unit')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_joined', models.DateField(blank=True, null=True)),
                ('invite_reason', models.CharField(blank=True, max_length=160, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_value', to='SiriusCRM.Category')),
            ],
        ),
        migrations.CreateModel(
            name='UserCompetency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='competency_value', to='SiriusCRM.Competency')),
            ],
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_begin', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_value', to='SiriusCRM.Course')),
            ],
        ),
        migrations.CreateModel(
            name='UserCourseEssay',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_essay', to='SiriusCRM.Course')),
                ('essay', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='essay_value', to='SiriusCRM.Essay')),
            ],
        ),
        migrations.CreateModel(
            name='UserFaculty',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='faculty_value', to='SiriusCRM.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='UserOffline',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('offline', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='offline_value', to='SiriusCRM.Offline')),
            ],
        ),
        migrations.CreateModel(
            name='UserPosition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_joined', models.DateField(blank=True, null=True)),
                ('invite_reason', models.CharField(blank=True, max_length=160, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='position_value', to='SiriusCRM.Position')),
            ],
        ),
        migrations.CreateModel(
            name='UserSocial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('social', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='social_value', to='SiriusCRM.Social')),
            ],
        ),
        migrations.CreateModel(
            name='UserUnit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='unit_value', to='SiriusCRM.Unit')),
            ],
        ),
        migrations.CreateModel(
            name='ZdravnizaComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=80, verbose_name='First name')),
                ('last_name', models.CharField(max_length=80, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, max_length=80, verbose_name='Middle name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('date_left', models.DateTimeField(blank=True, null=True, verbose_name='Date left')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_superuser', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('telegram', models.CharField(blank=True, max_length=80, null=True)),
                ('salary', models.FloatField(blank=True, null=True)),
                ('characteristic', models.TextField(blank=True, null=True)),
                ('village', models.CharField(blank=True, max_length=80, null=True)),
                ('street', models.CharField(blank=True, max_length=80, null=True)),
                ('house', models.CharField(blank=True, max_length=30, null=True)),
                ('apartment', models.CharField(blank=True, max_length=10, null=True)),
                ('categories', models.ManyToManyField(through='SiriusCRM.UserCategory', to='SiriusCRM.Category')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_city', to='cities_light.City')),
                ('faculties', models.ManyToManyField(through='SiriusCRM.UserFaculty', to='SiriusCRM.Faculty')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_organization', to='SiriusCRM.Organization')),
                ('positions', models.ManyToManyField(through='SiriusCRM.UserPosition', to='SiriusCRM.Position')),
                ('socials', models.ManyToManyField(through='SiriusCRM.UserSocial', to='SiriusCRM.Social')),
                ('units', models.ManyToManyField(through='SiriusCRM.UserUnit', to='SiriusCRM.Unit')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['id'],
            },
            managers=[
                ('objects', SiriusCRM.managers.UserManager.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='zdravnizacomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='zdravniza_user_value', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userunit',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_unit', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usersocial',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_social', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userposition',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_position', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useroffline',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_offline', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userfaculty',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_faculty', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usercourseessay',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_course_essay', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usercourse',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_course', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usercompetency',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_competency', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usercategory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_category', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='social',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='social_name', to='SiriusCRM.SocialName'),
        ),
        migrations.AddField(
            model_name='organizationoutcome',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_outcome', to='SiriusCRM.Payment'),
        ),
        migrations.AddField(
            model_name='organizationoutcome',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_outcome', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organizationincome',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_income', to='SiriusCRM.Payment'),
        ),
        migrations.AddField(
            model_name='organizationincome',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_income', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='comments',
            field=models.ManyToManyField(through='SiriusCRM.LeadComment', to='SiriusCRM.CrmComment'),
        ),
        migrations.AddField(
            model_name='lead',
            name='consultant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lead_consultant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='messenger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lead_messenger', to='SiriusCRM.Messenger'),
        ),
        migrations.AddField(
            model_name='lead',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lead_status', to='SiriusCRM.LeadStatus'),
        ),
        migrations.AddField(
            model_name='crmcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='crm_user_value', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coursecurator',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_curator', to='SiriusCRM.Position'),
        ),
        migrations.AddField(
            model_name='coursecurator',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_course_curator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactsocial',
            name='social',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contact_social_value', to='SiriusCRM.Social'),
        ),
        migrations.AddField(
            model_name='contactcomment',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_value', to='SiriusCRM.ZdravnizaComment'),
        ),
        migrations.AddField(
            model_name='contactcomment',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contact_value', to='SiriusCRM.Contact'),
        ),
        migrations.AddField(
            model_name='contact',
            name='comments',
            field=models.ManyToManyField(through='SiriusCRM.ContactComment', to='SiriusCRM.ZdravnizaComment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='consultant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='appointment_consultant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_contact', to='SiriusCRM.Contact'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appointment_status', to='SiriusCRM.AppointmentStatus'),
        ),
    ]
